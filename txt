LeftSection.js

import { List, ListItem } from '@mui/material';
import React, { useState } from 'react';
import CompanyLogo from './CompanyLogo';
import Folder from './Folder';
import foldersData from './folders.json'


const FOLDERS_PER_PAGE = 10;

function LeftSection({ onFolderClick }) {
  const [currentPage, setCurrentPage] = useState(1);
  const totalPages = Math.ceil(foldersData.length / FOLDERS_PER_PAGE);

  const handlePageChange = (page) => {
    setCurrentPage(page);
  };

  const startIndex = (currentPage - 1) * FOLDERS_PER_PAGE;
  const visibleFolders = foldersData.slice(startIndex, startIndex + FOLDERS_PER_PAGE);

  return (
    <div className="left-section">
      <CompanyLogo />
      <List className="folder-list">
        {foldersData.map(folder => (
          <ListItem key={folder.id}
            >
              <Folder
              
            name={folder.name}
            onClick={() => onFolderClick(folder.id)}
          /></ListItem>
        ))}
      </List>
      <div className="pagination">
        {Array.from({ length: totalPages }, (_, index) => (
          <button
            key={index}
            onClick={() => handlePageChange(index + 1)}
            className={currentPage === index + 1 ? 'active' : ''}
          >
            {index + 1}
          </button>
        ))}
      </div>
    </div>
  );
}

export default LeftSection;

import React, { useState } from 'react';
import LeftSection from './components/LeftSection';
import MiddleSection from './components/MiddleSection';
import RightSection from './components/RightSection';
import Grid from '@mui/material/Grid';
import './App.css';
import filesData from './components/files.json';
import foldersData from './components/folders.json';


function App() {

const [selectedFolder, setSelectedFolder] = useState(null);
  const [favoriteFiles, setFavoriteFiles]=useState([]);
  const [downloadedFiles,setDownloadedFiles] = useState([]);
  const [recentFiles,setRecentFiles] = useState([]);

  const handleFolderClick = (folderId) => {
    setSelectedFolder(folderId);
  };

  const handleToggleFavorite=(file)=>{
    if(file.isFavorite){
      setFavoriteFiles(prevFavorites=>prevFavorites.filter(fav=>fav.id!== file.id));

    }
    else{
      setFavoriteFiles(prevFavorites=>[...prevFavorites,file]);
    }
    setFiles(prevFiles=>
      prevFiles.map(f=>(f.id===file.id?{...f,isFavorite:!f.isFavorite}:f)))
  }

  const handleDownloadFile =(file)=>{
    setDownloadedFiles(prevDownloaded=>[...prevDownloaded,file])
  }
  const handleFileClick = (file) => {
    // Update recentFiles state
    const MAX_RECENT_FILES = 5; // Adjust the maximum number of recent files as needed

    // Check if the clicked file is already in the recentFiles array
    if (!recentFiles.some(recentFile => recentFile.id === file.id)) {
      // Add the clicked file to the beginning of the recentFiles array
      const updatedRecentFiles = [file, ...recentFiles.slice(0, MAX_RECENT_FILES - 1)];
      setRecentFiles(updatedRecentFiles);
    }
  };

  const filteredFiles = selectedFolder
  ? filesData.filter(file => file.folderIds.includes(selectedFolder)) : filesData;

  return (
    <div className="app">
      <Grid container spacing={2}>
        <Grid item xs={3}> {/* Left section */}
          <LeftSection folders={foldersData} onFolderClick={handleFolderClick} />
        </Grid>
        <Grid item xs={6}> {/* Middle section */}
          <MiddleSection files={filteredFiles} 
          onToggleFavorite={handleToggleFavorite}
          onFileClick={handleFileClick}
          onDownloadFiles={handleDownloadFile} />
        </Grid>
        <Grid item xs={3}> {/* Right section */}
          <RightSection favoriteFiles={favoriteFiles}
          recentFiles={recentFiles}
          downloadedFiles={downloadedFiles} />
        </Grid>
      </Grid>
    </div>
  );
}

export default App;

import React, { useState } from 'react';
import { IconButton, List, ListItem, ListItemIcon, ListItemText, Typography } from '@mui/material';
import NotificationsIcon from '@mui/icons-material/Notifications';
import AccountCircleIcon from '@mui/icons-material/AccountCircle';
import FavoriteIcon from '@mui/icons-material/Favorite';
import FileCopyIcon from '@mui/icons-material/FileCopy'; // Import the icon for file type
import AccessTimeIcon from '@mui/icons-material/AccessTime';
import GetAppIcon from '@mui/icons-material/GetApp';
import DownloadIcon from '@mui/icons-material/CloudDownload';


function RightSection({favoriteFiles,recentFiles, downloadedFiles}) {
  // const [favoriteFiles, setFavoriteFiles] = useState([]);

  // const handleToggleFavorite = (file) => {
  //   if (favoriteFiles.includes(file)) {
  //     setFavoriteFiles(prevFavorites => prevFavorites.filter(fav => fav !== file));
  //   } else {
  //     setFavoriteFiles(prevFavorites => [...prevFavorites, file]);
  //   }
  // };

  return (
    <div className="right-section">
      <IconButton className="notification-settings">
        <NotificationsIcon />
      </IconButton>
      <IconButton className="profile-icon">
        <AccountCircleIcon />
      </IconButton>
      <div className="file-sections">
        <List>
          {/* Favorites Section */}
          <ListItem>
            <ListItemIcon>
              <FavoriteIcon />
            </ListItemIcon>
            <ListItemText primary="Favorite Files" />
          </ListItem>
          {favoriteFiles.map(file => (
            <ListItem key={file.id}>
              <ListItemIcon>
                <FileCopyIcon /> {/* Replace with your desired file type icon */}
              </ListItemIcon>
              <ListItemText primary={file.name} />
            </ListItem>
          ))}
           <ListItem>
            <ListItemIcon>
              <AccessTimeIcon />
            </ListItemIcon>
            <ListItemText primary="Recent Files" />
          </ListItem>
          {recentFiles.map(file => (
            <ListItem key={file.id}>
              <ListItemIcon>
                <FileCopyIcon /> {/* Replace with your desired file type icon */}
              </ListItemIcon>
              <ListItemText primary={file.name} />
            </ListItem>
          ))}
          <ListItem>
            <ListItemIcon>
              <DownloadIcon />
            </ListItemIcon>
            <ListItemText primary="Downloaded Files" />
          </ListItem>
          {downloadedFiles.map(file => (
            <ListItem key={file.id}>
              <ListItemIcon>
                <FileCopyIcon /> {/* Replace with your desired file type icon */}
              </ListItemIcon>
              <ListItemText primary={file.name} />
            </ListItem>
          ))}
          
        </List>
      </div>
    </div>
  );
}

export default RightSection;

import React, { useState } from 'react';
import File from './File';
import TextField from '@mui/material/TextField';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import FavoriteIcon from '@mui/icons-material/Favorite';
import IconButton from '@mui/material/IconButton';
import Grid from '@mui/material/Grid';
import DownloadIcon from '@mui/icons-material/CloudDownload';
import { InputAdornment } from '@mui/material';
import SearchIcon from '@mui/icons-material/Search';
import filesData from './files.json'

function MiddleSection({ onToggleFavorite,onDownloadFiles,onFileClick }) {
  const [searchTerm, setSearchTerm] = useState('');

  const filteredFiles = filesData.filter(file =>
    file.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="middle-section">
      {/* <Grid container spacing={2} alignItems="center">
        <Grid item xs={12}> */}
          <TextField
          style={{marginTop : "20 px"}}
            placeholder="Search files..."
            variant="outlined"
            fullWidth
            size='small'
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            InputProps={{
              startAdornment:(
                <InputAdornment position='start'>
                  <SearchIcon />
                </InputAdornment>
              ),
            }}
            InputLabelProps={{shrink: true}}
          />
        {/* </Grid>
      </Grid> */}
      <TableContainer component={Paper}>
        <Table stickyHeader>
          <TableHead>
            <TableRow>
              <TableCell>Name</TableCell>
              <TableCell>Date Uploaded</TableCell>
              <TableCell>Type</TableCell>
              <TableCell>Favorite</TableCell>
              <TableCell>Download</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {filteredFiles.map(file => (
              <TableRow key={file.id}>
                <TableCell>
                  <span
                  className='clickable-file'
                  onClick={()=>onFileClick(file)}>{file.name}</span>
                </TableCell>
                <TableCell>{file.uploadDate}</TableCell>
                <TableCell>{file.type}</TableCell>
                <TableCell>
                  <IconButton onClick={()=>onToggleFavorite(file)}>
                    {file.isFavorite ? <FavoriteIcon color="secondary" /> : <FavoriteIcon />}
                  </IconButton>
                </TableCell>
                <TableCell>
                  <IconButton onClick={()=> onDownloadFiles(file)}>
                    <DownloadIcon/>
                  </IconButton>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </div>
  );
}

export default MiddleSection;

[
    { "id": 1, "name": "File 1.txt", "folderId": [1,3,8,9] },
    { "id": 2, "name": "File 2.txt", "folderId": [2,3,7,5] },
    { "id": 3, "name": "File 3.txt", "folderId": [1,2,3,4] },
    { "id": 4, "name": "File 4.txt", "folderId": [2,3,6,8] },
    { "id": 5, "name": "File 5.txt", "folderId": [4,2,3,5] },
    { "id": 6, "name": "File 6.txt", "folderId": [1,6,2,3] },
    { "id": 7, "name": "File 7.txt", "folderId": [4,6,8,5] },
    { "id": 8, "name": "File 8.txt", "folderId": [1,5,7,9] },
    { "id": 9, "name": "File 9.txt", "folderId": [3,4,8,2] },
    { "id": 10, "name": "File 10.txt", "folderId": [9,6,4,2] },
    { "id": 11, "name": "File 11.txt", "folderId": [5,7,3,1] },
    { "id": 12, "name": "File 12.txt", "folderId": [1,3,7,8] },
    { "id": 13, "name": "File 13.txt", "folderId": [5,3,8,9] },
    { "id": 14, "name": "File 14.txt", "folderId": [2,3,1,4] },
    { "id": 15, "name": "File 15.txt", "folderId": [9,8,7,6] },
    { "id": 16, "name": "File 16.txt", "folderId": [6,5,4,2] },
    { "id": 17, "name": "File 17.txt", "folderId": [5,2,1,8] },
    { "id": 18, "name": "File 18.txt", "folderId": [7,3,5,1] },
    { "id": 19, "name": "File 19.txt", "folderId": [6,5,2,8] },
    { "id": 20, "name": "File 20.txt", "folderId": [4,3,2,1] },
    { "id": 21, "name": "File 21.txt", "folderId": [7,4,6,9] },
    { "id": 22, "name": "File 22.txt", "folderId": [2,6,8,9] },
    { "id": 23, "name": "File 23.txt", "folderId": [1,5,7,9] },
    { "id": 24, "name": "File 24.txt", "folderId": [2,6,9,3] },
    { "id": 25, "name": "File 25.txt", "folderId": [1,5,7,6] },
    { "id": 26, "name": "File 26.txt", "folderId": [2,6,4,3] },
    { "id": 27, "name": "File 27.txt", "folderId": [2,9,8,6] },
    { "id": 28, "name": "File 28.txt", "folderId": [2,3,6,9] },
    { "id": 29, "name": "File 29.txt", "folderId": [5,8,9,3] },
    { "id": 30, "name": "File 20.txt", "folderId": [5,7,8,1] }

   
  ]


[
   { "id": 1, "name": "Folder 1" },
   { "id": 2, "name": "Folder 2" },
   { "id": 3, "name": "Folder 3"},
   { "id": 4, "name": "Folder 4"},
   { "id": 5, "name": "Folder 5"},
   { "id": 6, "name": "Folder 6"},
   { "id": 7, "name": "Folder 7"},
   { "id": 8, "name": "Folder 8"},
   { "id": 9, "name": "Folder 9"}
        ]

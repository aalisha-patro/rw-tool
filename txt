import React, { useState } from "react";
import File from "./File";
import TextField from "@mui/material/TextField";
import Table from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableCell from "@mui/material/TableCell";
import TableContainer from "@mui/material/TableContainer";
import TableHead from "@mui/material/TableHead";
import TableRow from "@mui/material/TableRow";
import Paper from "@mui/material/Paper";
import FavoriteIcon from "@mui/icons-material/Favorite";
import IconButton from "@mui/material/IconButton";
import DownloadIcon from "@mui/icons-material/CloudDownload";
import {
  ButtonGroup,
  InputAdornment,
  Pagination,
  PaginationItem,
  TablePagination,
  Tooltip,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Breadcrumbs,
  Typography,
} from "@mui/material";
import SearchIcon from "@mui/icons-material/Search";
import filesData from "./files.json";
import MenuItem from "@mui/material/MenuItem";
import Button from "@mui/material/Button";
import Select from "@mui/material/Select";
import { DateRangePicker } from "@mui/lab";
import Dialog from "@mui/material/Dialog";
import DialogActions from "@mui/material/DialogActions";
import DialogContent from "@mui/material/DialogContent";
import DialogContentText from "@mui/material/DialogContentText";
import DialogTitle from "@mui/material/DialogTitle";
import DownloadForOfflineIcon from "@mui/icons-material/DownloadForOffline";
import Autocomplete from "@mui/material/Autocomplete";
import foldersData from "./folders.json";
import jszip from "jszip"; // Import the jszip library
import FileSaver from "file-saver"; // Import the file-saver library

function MiddleSection({
  files,
  onToggleFavorite,
  onDownloadFiles,
  onFileClick,
  clickedFileBreadcrumbs,
}) {
  // ... (other state variables and functions)

  const [selectedFiles, setSelectedFiles] = useState([]); // State to store selected files

  // Function to handle file selection
  const handleFileSelection = (file) => {
    const isSelected = selectedFiles.includes(file);

    if (isSelected) {
      setSelectedFiles(selectedFiles.filter((selectedFile) => selectedFile !== file));
    } else {
      setSelectedFiles([...selectedFiles, file]);
    }
  };

  // Function to handle the download of selected files as a ZIP folder
  const handleDownloadSelectedFiles = () => {
    if (selectedFiles.length === 0) {
      // No files are selected, so do nothing
      return;
    }

    // Create a new ZIP instance
    const zip = new jszip();

    // Add each selected file to the ZIP folder
    selectedFiles.forEach((file) => {
      // Assuming file.content is the file content or data
      zip.file(file.name, file.content);
    });

    // Generate the ZIP folder
    zip.generateAsync({ type: "blob" }).then((blob) => {
      // Save the ZIP folder as a file and trigger a download
      FileSaver.saveAs(blob, "selected_files.zip");
    });
  };

  return (
    <div className="middle-section">
      {/* ... (other code) */}
      <Button variant="contained" onClick={handleDownloadSelectedFiles}>
        Download Selected Files as ZIP
      </Button>
      {/* ... (other code) */}
    </div>
  );
}

export default MiddleSection;

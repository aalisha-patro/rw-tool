import React from "react";

import Card from "@mui/material/Card";

import CardActions from "@mui/material/CardActions";

import CardContent from "@mui/material/CardContent";

import CardMedia from "@mui/material/CardMedia";

import Grid from "@mui/material/Grid";

// import Box from "@mui/material/Box";

import Button from "@mui/material/Button";

import Typography from "@mui/material/Typography";

import Container from "@mui/material/Container";

import { Link } from "react-router-dom";

import RightSection from "./RightSection";

import { useState } from "react";

import folderData from "./folders.json";

import filesData from "./files.json";




export default function FolderMgmt() {

  const cards = [1, 2, 3, 4, 5, 6];

  const [folders, setFolders] = useState([]);




  const [files, setFiles] = useState([]);




  const [selectedFolder, setSelectedFolder] = useState(null);




  const [favoriteFiles, setFavoriteFiles] = useState([]);

  const [downloadFiles, setDownloadFiles] = useState([]);

  const [recentFiles, setRecentFiles] = useState([]);




  const handleToggleFavorite = (file) => {

    if (file.isFavorite) {

      file.isFavorite = false;




      setFavoriteFiles((favoriteFiles) =>

        favoriteFiles.filter((fav) => fav.id !== file.id)

      );

    } else {

      file.isFavorite = true;




      setFavoriteFiles((favoriteFiles) => [...favoriteFiles, file]);

    }




    setFiles((prevFiles) =>

      prevFiles.map((f) =>

        f.id === file.id ? { ...f, isFavorite: !f.isFavorite } : f

      )

    );

  };

  const handlePageChange = (event, page) => {

    setCurrentPage(page);

  };




  const handleDownloadFile = (file) => {

    setDownloadFiles((prevDownloaded) => [...prevDownloaded, file]);

  };

  const handleFileClick = (file) => {

    const MAX_RECENT_FILES = 5;




    if (!recentFiles.some((recentFiles) => recentFiles.id === file.id)) {

      const updatedRecentFiles = [

        file,

        ...recentFiles.slice(0, MAX_RECENT_FILES - 1),

      ];

      setRecentFiles(updatedRecentFiles);

    }

  };




  const [currentPage, setCurrentPage] = useState(1);

  const foldersPerPage = 5;

  const totalPages = Math.ceil(folderData.length / foldersPerPage);

  const filteredFiles = selectedFolder

    ? filesData.filter((file) => file.folderIds.includes(selectedFolder))

    : filesData;




  const [clickedFolderId, setClickedFolderId] = useState(1);




  const handleFolderClick = (folderId) => {

    setSelectedFolder(folderId);

    setClickedFolderId(folderId);

  };

  return (

    <div>

      <Container style={{ margin: "25px auto", display: "flex", justifyContent: "space-between" }}>

        <Grid container spacing={4} item xs={9}>

          {cards.map((card) => (

            <Grid item key={card} xs={6} sm={2} md={4}>

              <Card

                sx={{

                  height: "100%",

                  display: "flex",

                  flexDirection: "column",

                  maxWidth: 345,

                  boxShadow: 5,

                }}

              >

                <CardMedia

                  component="div"

                  sx={{

                    // 16:9

                    pt: "56.25%",

                  }}

                  image="https://source.unsplash.com/random?wallpapers"

                />

                <CardContent sx={{ flexGrow: 1 }}>

                  <Typography style={{ textAlign: "center" }}>

                    Accounts_Statement_{card}

                  </Typography>

                </CardContent>

                <CardActions>

                  <Link

                    style={{

                      textDecoration: "none",

                      textAlign: "center",

                      margin: "auto",

                    }}

                    to="/userlist"

                  >

                    <Button

                      // style={{ textAlign: "center", margin: "auto" }}

                      size="small"

                    >

                      Open

                    </Button>

                  </Link>

                </CardActions>

              </Card>

            </Grid>

          ))}

          </Grid>

          {/* <Grid xs={3} sm={3} md={4}>

            <RightSection

              favoriteFiles={favoriteFiles}

              downloadedFiles={downloadFiles}

              recentFiles={recentFiles}

            />

          </Grid> */}

          <Grid item xs={3} style={{ paddingTop: "0px" }}>

            <RightSection

              favoriteFiles={favoriteFiles}

              downloadedFiles={downloadFiles}

              recentFiles={recentFiles}

            />

          </Grid>

       

      </Container>

    </div>

  );

}





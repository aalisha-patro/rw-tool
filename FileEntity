package com.scb.axessspringboottraining.entity;

//import io.swagger.annotations;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
//@ApiModel(description = "File entity")
@Table(name = "file_table")
public class File {
	
//    @Column(name="file_id")
	@Id //primary key
	@GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long file_id;
    private String name;
    private String type;
    @Column(name="uploaded_at")
//    @ApiModelProperty(value = "Creation date of the file", example = "2023-08-30")
    @Temporal(TemporalType.DATE)
    private Date dateUploaded;
    
    @ManyToOne
	@JoinColumn(name="folder_path_id")
	private FolderPath folderPath;
    
    @ManyToMany(mappedBy = "favoriteFiles")
    @JsonIgnore
    List<User> users_fav;
    
    @ManyToMany(mappedBy = "recentFiles")
    @JsonIgnore
    List<User> users_recent;
    
    @ManyToMany(mappedBy = "downloadedFiles")
    @JsonIgnore
    List<User> users_downloaded;
    
	public Long getFile_id() {
		return file_id;
	}
	public void setFile_id(Long file_id) {
		this.file_id = file_id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getType() {
		return type;
	}
	public void setType(String type) {
		this.type = type;
	}
	public Date getDateUploaded() {
		return dateUploaded;
	}
	public void setDateUploaded(Date dateUploaded) {
		this.dateUploaded = dateUploaded;
	}
	public FolderPath getFolderPath() {
		return folderPath;
	}
	public void setFolderPath(FolderPath folderPath) {
		this.folderPath = folderPath;
	}
	public List<User> getUsers_fav() {
		return users_fav;
	}
	public void setUsers_fav(List<User> users_fav) {
		this.users_fav = users_fav;
	}
	public List<User> getUsers_recent() {
		return users_recent;
	}
	public void setUsers_recent(List<User> users_recent) {
		this.users_recent = users_recent;
	}
	public List<User> getUsers_downloaded() {
		return users_downloaded;
	}
	public void setUsers_downloaded(List<User> users_downloaded) {
		this.users_downloaded = users_downloaded;
	}
}

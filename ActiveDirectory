package com.scb.axessspringboottraining.entity;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name = "active_directory_table")
public class ActiveDirectory {
	@Id //primary key
    @Column(name="active_directory_id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long active_directory_id;
    private String name;
    @Column(name="Status", columnDefinition = "boolean default true")
    private boolean status = true; // 0 for inactive 1 for active
    
    @ManyToMany()
    List<FolderPath> folderPaths;
    
    @ManyToMany(mappedBy = "activeDirectories",
			cascade = CascadeType.ALL)
    @JsonIgnore
    List<User> users;
    
	public Long getActive_directory_id() {
		return active_directory_id;
	}
	public void setActive_directory_id(Long active_directory_id) {
		this.active_directory_id = active_directory_id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getStatus() {
		return (this.status==true)?"Active":"Inactive";
	}
	public void setStatus(boolean status) {
		this.status = status;
	}
	public List<User> getUsers() {
		return users;
	}
	public void setUsers(List<User> users) {
		this.users = users;
	}
	public List<FolderPath> getFolderPaths() {
		return folderPaths;
	}
	public void setFolderPaths(List<FolderPath> folderPaths) {
		this.folderPaths = folderPaths;
	}

}
